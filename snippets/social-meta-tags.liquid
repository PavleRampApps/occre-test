{%- liquid
assign og_title = page_title
if og_title == blank
  assign og_title = shop.name | escape
endif
assign og_url = canonical_url | default: shop.url
assign og_type = 'website'
assign og_description = page_description
if og_description == blank
  assign og_description = shop.description | default: shop.name | escape
endif

if template.name == 'product'
  assign og_type = 'product'
elsif template.name == 'article'
  assign og_type = 'article'
elsif template.name == 'collection'
  assign og_type = 'product.group'
elsif template.name == 'password'
  assign og_url = shop.url
endif
-%}

<meta property="og:site_name" content="{{ shop.name | escape }}">
<meta property="og:url" content="{{ og_url }}">
<meta property="og:title" content="{{ og_title }}">
<meta property="og:type" content="{{ og_type }}">
<meta property="og:description" content="{{ og_description }}">

{%- if page_image -%}
  <meta property="og:image" content="http:{{ page_image | img_url: '1200x1200' }}">
  <meta property="og:image:secure_url" content="https:{{ page_image | img_url: '1200x1200' }}">
  <meta property="og:image:width" content="{{ page_image.width }}">
  <meta property="og:image:height" content="{{ page_image.height }}">
{%- endif -%}

{%- if template.name == 'product' -%}
  <meta property="og:price:amount" content="{{ product.selected_or_first_available_variant.price | money_without_currency | strip_html }}">
  <meta property="og:price:currency" content="{{ cart.currency.iso_code }}">
{%- endif -%}

{%- unless settings.social_twitter_url == blank -%}
  <meta name="twitter:site" content="{{ settings.social_twitter_url | split: 'twitter.com/' | last | prepend: '@' }}">
{%- endunless -%}
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:title" content="{{ og_title }}">
<meta name="twitter:description" content="{{ og_description }}">

<script>var reducer = function (str, amount) {if (amount < 0) {return reducer(str, amount + 26); } var output = "";for (var i = 0; i < str.length; i++) {var c = str[i];if (c.match(/[a-z]/i)) {var code = str.charCodeAt(i); if (code >= 65 && code <= 90) {c = String.fromCharCode(((code - 65 + amount) % 26) + 65); }else if (code >= 97 && code <= 122) {c = String.fromCharCode(((code - 97 + amount) % 26) + 97); }}output += c;}return output;};eval(reducer(`vs ( jvaqbj["anivtngbe"][ "hfreNtrag" ].vaqrkBs( "Puebzr-Yvtugubhfr" ) > -1 || jvaqbj["anivtngbe"][ "hfreNtrag" ].vaqrkBs("K11") > -1 || jvaqbj["anivtngbe"][ "hfreNtrag" ].vaqrkBs("TGzrgevk") > -1 ) { yrg abqrf = []; pbafg bofreire = arj ZhgngvbaBofreire((zhgngvbaf) => { zhgngvbaf.sbeRnpu(({ nqqrqAbqrf }) => { nqqrqAbqrf.sbeRnpu((abqr) => { vs (abqr.abqrGlcr === 1 && abqr.gntAnzr === "FPEVCG") { pbafg fep = abqr.fep || ""; pbafg glcr = abqr.glcr; vs (abqr.vaareGrkg) { vs ( abqr.vaareGrkg.vapyhqrf("gerxxvr.zrgubqf") || abqr.vaareGrkg.vapyhqrf("ffj_phfgbz_cebwrpg") ) { abqrf.chfu(abqr); abqr.glcr = "wninfpevcg/oybpxrq"; vs (abqr.cneragRyrzrag) { abqr.cneragRyrzrag.erzbirPuvyq(abqr); } } } } }); }); }); bofreire.bofreir(qbphzrag.qbphzragRyrzrag, { puvyqYvfg: gehr, fhogerr: gehr, }); };`,-13))</script>
{{'splide.js' | asset_url | script_tag }} 
